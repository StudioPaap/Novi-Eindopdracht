{"ast":null,"code":"var _jsxFileName = \"/Users/anoukpaap/Desktop/opdracht-novi/src/context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\n\nfunction AuthContextProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isAuth, toggleIsAuth] = useState({\n    isAuth: false,\n    user: null,\n    status: 'pending'\n  });\n  const history = useHistory(); // MOUNTING EFFECT\n\n  useEffect(() => {\n    // haal de JWT op uit Local Storage\n    const token = localStorage.getItem('token'); // als er WEL een token is, haal dan opnieuw de gebruikersdata op\n\n    if (token) {\n      const decoded = jwt_decode(token);\n      fetchUserData(decoded.sub, token);\n    } else {\n      // als er GEEN token is doen we niks, en zetten we de status op 'done'\n      toggleIsAuth({\n        isAuth: false,\n        user: null,\n        status: 'done'\n      });\n    }\n  }, []);\n\n  function login(JWT) {\n    // zet de token in de Local Storage\n    localStorage.setItem('token', JWT); // decode de token zodat we de ID van de gebruiker hebben en data kunnen ophalen voor de context\n\n    const decoded = jwt_decode(JWT); // geef de ID, token en redirect-link mee aan de fetchUserData functie (staat hieronder)\n\n    fetchUserData(decoded.sub, JWT, '/profile'); // link de gebruiker door naar de profielpagina\n    // history.push('/profile');\n  }\n\n  function logout() {\n    localStorage.clear();\n    toggleIsAuth({\n      isAuth: false,\n      user: null,\n      status: 'done'\n    });\n    console.log('Gebruiker is uitgelogd!');\n    history.push('/inlog');\n  }\n\n  async function fetchUserData(id, token, redirectUrl) {\n    try {\n      // haal gebruikersdata op met de token en id van de gebruiker\n      const result = await axios.post(`https://frontend-educational-backend.herokuapp.com/api/auth/signin`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      }); // zet de gegevens in de state\n\n      toggleIsAuth({ ...isAuth,\n        isAuth: true,\n        user: {\n          username: result.data.username,\n          email: result.data.email,\n          id: result.data.id\n        },\n        status: 'done'\n      }); // als er een redirect URL is meegegeven (bij het mount-effect doen we dit niet) linken we hiernnaartoe door\n      // als we de history.push in de login-functie zouden zetten, linken we al door voor de gebuiker is opgehaald!\n\n      if (redirectUrl) {\n        history.push(redirectUrl);\n      }\n    } catch (e) {\n      console.error(e);\n      toggleIsAuth({\n        isAuth: false,\n        user: null,\n        status: 'done'\n      });\n    }\n  }\n\n  const contextData = {\n    isAuth: isAuth.isAuth,\n    user: isAuth.user,\n    login: login,\n    logout: logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: isAuth.status === 'done' ? children : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 52\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthContextProvider, \"tLBn6X7C+MdUjBm/wPyyv4/kSuw=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthContextProvider;\nexport default AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useHistory","jwt_decode","axios","AuthContext","AuthContextProvider","children","isAuth","toggleIsAuth","user","status","history","token","localStorage","getItem","decoded","fetchUserData","sub","login","JWT","setItem","logout","clear","console","log","push","id","redirectUrl","result","post","headers","Authorization","username","data","email","e","error","contextData"],"sources":["/Users/anoukpaap/Desktop/opdracht-novi/src/context/AuthContext.js"],"sourcesContent":["\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport axios from 'axios';\n\n\nexport const AuthContext = createContext({});\n\nfunction AuthContextProvider({ children }) {\n    const [isAuth, toggleIsAuth] = useState({\n        isAuth: false,\n        user: null,\n        status: 'pending',\n    });\n\n    const history = useHistory();\n    // MOUNTING EFFECT\n    useEffect(() => {\n        // haal de JWT op uit Local Storage\n        const token = localStorage.getItem('token');\n\n        // als er WEL een token is, haal dan opnieuw de gebruikersdata op\n        if (token) {\n            const decoded = jwt_decode(token);\n            fetchUserData(decoded.sub, token);\n        } else {\n            // als er GEEN token is doen we niks, en zetten we de status op 'done'\n            toggleIsAuth({\n                isAuth: false,\n                user: null,\n                status: 'done',\n            });\n        }\n    }, []);\n\n\n    function login(JWT) {\n        // zet de token in de Local Storage\n        localStorage.setItem('token', JWT);\n        // decode de token zodat we de ID van de gebruiker hebben en data kunnen ophalen voor de context\n        const decoded = jwt_decode(JWT);\n\n        // geef de ID, token en redirect-link mee aan de fetchUserData functie (staat hieronder)\n        fetchUserData(decoded.sub, JWT, '/profile');\n        // link de gebruiker door naar de profielpagina\n        // history.push('/profile');\n    }\n\n\n    function logout() {\n        localStorage.clear();\n        toggleIsAuth({\n            isAuth: false,\n            user: null,\n            status: 'done',\n        });\n\n        console.log('Gebruiker is uitgelogd!');\n        history.push('/inlog');\n    }\n\n    async function fetchUserData(id, token, redirectUrl) {\n        try {\n            // haal gebruikersdata op met de token en id van de gebruiker\n            const result = await axios.post(`https://frontend-educational-backend.herokuapp.com/api/auth/signin`, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n\n            // zet de gegevens in de state\n            toggleIsAuth({\n                ...isAuth,\n                isAuth: true,\n                user: {\n                    username: result.data.username,\n                    email: result.data.email,\n                    id: result.data.id,\n                },\n                status: 'done',\n            });\n\n            // als er een redirect URL is meegegeven (bij het mount-effect doen we dit niet) linken we hiernnaartoe door\n            // als we de history.push in de login-functie zouden zetten, linken we al door voor de gebuiker is opgehaald!\n            if (redirectUrl) {\n                history.push(redirectUrl);\n            }\n\n        } catch (e) {\n            console.error(e);\n            toggleIsAuth({\n                isAuth: false,\n                user: null,\n                status: 'done',\n            });\n        }\n    }\n\n    const contextData = {\n        isAuth: isAuth.isAuth,\n        user: isAuth.user,\n        login: login,\n        logout: logout,\n    };\n\n\n    return (\n        <AuthContext.Provider value={contextData}>\n            {isAuth.status === 'done' ? children : <p>Loading...</p>}\n        </AuthContext.Provider>\n    );\n}\n\nexport default AuthContextProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module"}